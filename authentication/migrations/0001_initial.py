# Generated by Django 5.1.3 on 2024-11-30 06:04

import authentication.models
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserActivation',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время последнего изменения')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('handle', models.CharField(max_length=100, verbose_name='Хэндл')),
                ('email', models.EmailField(max_length=100, verbose_name='Электронная почта')),
                ('is_used', models.BooleanField(default=False, verbose_name='Ссылка использована?')),
                ('expiration_date', models.DateTimeField(default=authentication.models._password_default_exp_date)),
            ],
            options={
                'verbose_name': 'Активация аккаунта',
                'verbose_name_plural': 'Активация аккаунта',
            },
        ),
        migrations.CreateModel(
            name='MainUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время последнего изменения')),
                ('handle', models.CharField(max_length=100, unique=True, verbose_name='Хэндл')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='Электронная почта')),
                ('first_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Фамилия')),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Телефонный номер')),
                ('gender', models.CharField(blank=True, choices=[('MAN', 'Мужской'), ('WOMAN', 'Женский'), ('NON_BINARY', 'Не бинарный')], max_length=20, null=True, verbose_name='Пол')),
                ('uin', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='ИИН')),
                ('t_shirt_size', models.CharField(blank=True, choices=[('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL')], max_length=5, null=True, verbose_name='Размер футболки')),
                ('place_of_study_of_work', models.CharField(blank=True, max_length=128, null=True, verbose_name='Место учебы или работы')),
                ('employment_status', models.CharField(blank=True, choices=[('WORKING', 'Работаю'), ('STUDYING', 'Учусь'), ('NOT_WORKING_AND_STUDYING', 'Не учусь и не работаю')], max_length=128, null=True, verbose_name='Статус занятости')),
                ('citizen_of_kz', models.BooleanField(default=True, verbose_name='Гражданин РК?')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Админ?')),
                ('is_moderator', models.BooleanField(default=False, verbose_name='Модератор?')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Аккаунт удален?')),
                ('is_active', models.BooleanField(default=True, verbose_name='Аккаунт активен?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='PasswordRecovery',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Время последнего изменения')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_used', models.BooleanField(default=False, verbose_name='Ссылка использована?')),
                ('expiration_date', models.DateTimeField(default=authentication.models._password_default_exp_date)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Восстановление пароля',
                'verbose_name_plural': 'Восстановление пароля',
            },
        ),
    ]
