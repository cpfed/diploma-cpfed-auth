version: "3.12.4"

services:
  db:
    image: postgres:14.1
    environment:
      - POSTGRES_DB=cpfed_auth_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data

  # rabbitmq:
  #   image: "rabbitmq:alpine"
  #
  #   healthcheck:
  #     test: rabbitmq-diagnostics -q ping
  #     interval: 30s
  #     timeout: 30s
  #     retries: 3

  django:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/cpfed_auth_db
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    #  - rabbitmq
    restart: on-failure

  celery:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    command: celery -A cpfed worker -l info
    volumes:
      - .:/app
    depends_on:
      - django
      - redis
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/cpfed_auth_db
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - DJANGO_SETTINGS_MODULE=cpfed.settings

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"

  celery-beat:
    build:
      context: .
      dockerfile: docker/local.Dockerfile
    command: celery -A cpfed beat -l info
    volumes:
      - .:/app
    depends_on:
      - django
      - redis
    environment:
      - DATABASE_URL=postgres://postgres:postgres@db:5432/cpfed_auth_db
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2

  # celery:
  #   build:
  #     context: .
  #     dockerfile: docker/local.Dockerfile
  #   command: celery -A cpfed_auth.tasks worker -l info --without-gossip --without-mingle --without-heartbeat
  #   environment:
  #     - DATABASE_URL=postgres://postgres:postgres@db:5432/cpfed_auth_db
  #     - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - db
  #     - rabbitmq
  #   restart: on-failure

  # beats:
  #   build:
  #     context: .
  #     dockerfile: docker/local.Dockerfile
  #   command: celery -A cpfed_auth.tasks beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
  #   environment:
  #     - DATABASE_URL=postgres://postgres:postgres@db:5432/cpfed_auth_db
  #     - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - db
  #     - rabbitmq
  #   restart: on-failure
volumes:
  db_data: