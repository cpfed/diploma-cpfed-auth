apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-cpfed
  labels:
    app: auth-cpfed
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-cpfed
  template:
    metadata:
      labels:
        app: auth-cpfed
        app.kubernetes.io/name: auth-cpfed
    spec:
      containers:
        - name: nginx
          image: nginx:stable
          ports:
            - containerPort: 8080
              name: auth-nginx-svc
          volumeMounts:
            - name: config-vol
              mountPath: "/etc/nginx/conf.d/"
        - name: auth-cpfed 
          image: zharaskhan/auth-cpfed-master
          imagePullPolicy: "Always"
          workingDir: /app/
          command: ["sh", "-c"]
          args:
          - |
            echo "$(pwd)"
            echo "Hello from auth-cpfed"
            ./docker/web_entrypoint.sh
          ports:
            - containerPort: 8000
              name: auth-svc
          livenessProbe:
            httpGet:
              path: /health
              port: auth-svc
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: auth-svc
            initialDelaySeconds: 15
            periodSeconds: 5
          envFrom:
            - configMapRef:
                name: auth-configmap
          env:
            - name: REDIS_HOST
              value: $(AUTH_REDIS_SERVICE_HOST)
            - name: CELERY_BROKER_URL
              value: "redis://auth-redis:6379/1"
            - name: CELERY_RESULT_BACKEND
              value: "redis://auth-redis:6379/2"
      restartPolicy: Always
      volumes:
      - name: config-vol
        configMap:
          name: nginx-config
          items:
            - key: nginx.conf
              path: nginx.conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-redis
  labels:
    app: auth-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-redis
  template:
    metadata:
      name: auth-redis
      labels:
        app: auth-redis
        app.kubernetes.io/name: auth-redis
    spec:
      containers:
      - name: auth-redis
        image: "docker.io/redis:6.0.5"
        ports:
          - containerPort: 6379
            name: auth-redis-svc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-celery
  labels:
    app: auth-celery
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-celery
  template:
    metadata:
      labels:
        app: auth-celery
        app.kubernetes.io/name: auth-celery
    spec:
      containers:
        - name: auth-celery
          image: "docker.io/zharaskhan/auth-cpfed-master"
          imagePullPolicy: "Always"
          workingDir: /app/
          command: ["celery"]
          args: ["-A", "cpfed", "worker", "-l", "info"]
          env:
            - name: CELERY_BROKER_URL
              value: "redis://auth-redis:6379/1"
            - name: CELERY_RESULT_BACKEND
              value: "redis://auth-redis:6379/2"
          envFrom:
            - configMapRef:
                name: auth-configmap
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-celery-beat
  labels:
    app: auth-celery-beat
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-celery-beat
  template:
    metadata:
      labels:
        app: auth-celery-beat
        app.kubernetes.io/name: auth-celery-beat
    spec:
      containers:
        - name: auth-celery-beat
          image: "docker.io/zharaskhan/auth-cpfed-master"
          imagePullPolicy: "Always"
          workingDir: /app/
          command: ["celery"]
          args: ["-A", "cpfed", "beat", "-l", "info"]
          env:
            - name: CELERY_BROKER_URL
              value: "redis://auth-redis:6379/1"
            - name: CELERY_RESULT_BACKEND
              value: "redis://auth-redis:6379/2"
          envFrom:
            - configMapRef:
                name: auth-configmap
